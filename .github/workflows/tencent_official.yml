name: iOS Release CI

on:
  release:
    types: [published]

jobs:
  Build:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: pod cache
      uses: actions/cache@v2
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-
    - name: Install GPG
      run: brew install gnupg
    - name: List available Xcode versions
      run: ls /Applications | grep Xcode
    - name: Decrypt large secret
      run: sh .github/script/import_provisioning.sh Release
      env:
        PROVISIONING_PASSWORD: ${{ secrets.GPG_DECRYPT_PASSPHRASE }}
        P12_EXPORT_CCHARLESREN_PASSWORD: ${{ secrets.IOT_P12_EXPORT_PASSWORD }}
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_11.5.app && /usr/bin/xcodebuild -version
    - name: Build archive
      run: |
        sh .github/script/archive.sh Release
        zip -q -r -m -o "LinkApp.dSYM.zip" LinkApp.xcarchive/dSYMs/LinkApp.app.dSYM
        gpg --batch --passphrase "$PROVISIONING_PASSWORD" -c LinkApp.dSYM.zip
        gpg --batch --passphrase "$PROVISIONING_PASSWORD" -c LinkApp.ipa
      env:
        PROVISIONING_PASSWORD: ${{ secrets.GPG_DECRYPT_PASSPHRASE }}
#    - name: Upload ipa to github
#      uses: actions/upload-artifact@v2
#      with:
#        name: ipa
#        path: LinkApp.ipa.gpg
#    - name: Upload dSYM to github
#      uses: actions/upload-artifact@v2
#      with:
#        name: dSYM
#        path: LinkApp.dSYM.zip.gpg
    
    - name: Upload ipa Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: LinkApp.ipa.gpg
        asset_name: LinkApp
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload ipa Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: LinkApp.dSYM.zip.gpg
        asset_name: dSYM
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: upload dSYM
      run: ./Pods/Fabric/upload-symbols -gsp ./Source/LinkApp/Supporting\ Files/GoogleService-Info.plist -p ios ./LinkApp.xcarchive/dSYMs/LinkApp.app.dSYM
